{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2020-12-18T01:58:56.984Z",
    "end": "2020-12-18T02:00:17.736Z",
    "duration": 80752,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "96473e51-fd46-4270-873d-cc098e5e5db9",
      "title": "",
      "fullFile": "cypress\\integration\\test.feature",
      "file": "cypress\\integration\\test.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2516bb3-25eb-4116-97e9-ae8d4bffd3f3",
          "title": "Registrar na Demo Automating",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Acessar, inserir informações incorreto",
              "fullTitle": "Registrar na Demo Automating Acessar, inserir informações incorreto",
              "timedOut": null,
              "duration": 70192,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.",
                "estack": "CypressError: `cy.screenshot()` timed out waiting `30000ms` to complete.\n    at http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:159062:22\n    at tryCatcher (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:10584:23)\n    at http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:5706:41\n    at tryCatcher (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromise0 (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:8621:10)\n    at Promise._settlePromises (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:8697:18)\n    at _drainQueueStep (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:5291:12)\n    at _drainQueue (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://demo.automationtesting.in/__cypress/runner/cypress_runner.js:5170:14)",
                "diff": null
              },
              "uuid": "2754325c-700f-4e07-b06c-272681d264da",
              "parentUUID": "b2516bb3-25eb-4116-97e9-ae8d4bffd3f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2754325c-700f-4e07-b06c-272681d264da"
          ],
          "pending": [],
          "skipped": [],
          "duration": 70192,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "overwrite": false
      },
      "version": "5.1.0"
    }
  }
}