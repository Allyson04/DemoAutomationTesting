{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2020-12-19T16:44:54.075Z",
    "end": "2020-12-19T16:47:53.643Z",
    "duration": 179568,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ead5e92f-fabd-4704-be28-d4ae8a90a560",
      "title": "",
      "fullFile": "cypress\\integration\\test.feature",
      "file": "cypress\\integration\\test.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7fe1fa9b-eb66-40d7-beeb-0dcc811a50bf",
          "title": "Registrar na Demo Automating",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Acessar, inserir informações e confirmar registro",
              "fullTitle": "Registrar na Demo Automating Acessar, inserir informações e confirmar registro",
              "timedOut": null,
              "duration": 93788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a259ed9d-4428-4b0c-b832-4f625b4315ce",
              "parentUUID": "7fe1fa9b-eb66-40d7-beeb-0dcc811a50bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acessar, inserir informações incorreto",
              "fullTitle": "Registrar na Demo Automating Acessar, inserir informações incorreto",
              "timedOut": null,
              "duration": 73302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find content: 'The requested URL was not found on this server.' within the element: <section#section> but never did.",
                "estack": "AssertionError: Timed out retrying: Expected to find content: 'The requested URL was not found on this server.' within the element: <section#section> but never did.\n    at TestPage.validate (http://demo.automationtesting.in/__cypress/tests?p=cypress\\integration\\test.feature:334:39)\n    at Context.eval (http://demo.automationtesting.in/__cypress/tests?p=cypress\\integration\\test.feature:364:12)\n    at Context.resolveAndRunStepDefinition (http://demo.automationtesting.in/__cypress/tests?p=cypress\\integration\\test.feature:12115:9)\n    at Context.eval (http://demo.automationtesting.in/__cypress/tests?p=cypress\\integration\\test.feature:11456:35)",
                "diff": null
              },
              "uuid": "4504e734-5b5b-4ea4-895d-890b5cc799dd",
              "parentUUID": "7fe1fa9b-eb66-40d7-beeb-0dcc811a50bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a259ed9d-4428-4b0c-b832-4f625b4315ce"
          ],
          "failures": [
            "4504e734-5b5b-4ea4-895d-890b5cc799dd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 167090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "overwrite": false
      },
      "version": "5.1.0"
    }
  }
}